var searchIndex = new Map(JSON.parse('[\
["hydra",{"t":"EEEEEEEEEECCCCCCCCCCCGKIFPPPPPMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOFNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNEEEECCCCCCCFNNNNNNCOONNNNNNNCONCNNNNNNNNNNNNCNNNNNNNNNCNNNONNNNNOPPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOHFPPPGPNNNNNNNNNNNNNNNNNNONNNNNNNNNONNNNNNNFFNNNNNNNONNNNNNNNNNONNNNNNNNONNNNNNNNNNNNFNNNNNONNNNNNNNNNNNNNNNFNONNNNNNNNNNNNNNNNNNNNNNNNNGGFFPPPPPPONNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNCCCNCNNCNNNNNNNNNNNNNOOEECCECCKRMMMMMMMMECCCRKMMMMMMMMMMMMMMMMMEECCCCFNNNNNNNNONONNONNNFNNNNNNNNONOONNONNNKFNNONNNNNNNOOMNNNEEKMCCFNNNNNNNNNNNNNFNNNNNNNNNNNNNEEEEECCCCCFNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNRRKKFMNNMNNNNNMNMNMMMMMNNN","n":["Arrow","CellShape","FaceShape","Geometry","Matrix","Mesh","MeshEntity","Section","Sieve","Vector","boundary","domain","geometry","linalg","solver","tests","time_stepping","bc_handler","dirichlet","neumann","robin","BoundaryCondition","BoundaryConditionApply","BoundaryConditionFn","BoundaryConditionHandler","Dirichlet","DirichletFn","Neumann","NeumannFn","Robin","apply","apply","apply_bc","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","from","from","get_bc","init","init","into","into","new","set_bc","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","alpha","beta","DirichletBC","apply","apply_bc","apply_constant_dirichlet","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","new","set_bc","try_from","try_into","type_id","NeumannBC","apply","apply_bc","apply_constant_neumann","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","new","set_bc","try_from","try_into","type_id","RobinBC","apply","apply_bc","apply_robin","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","new","set_bc","try_from","try_into","type_id","Arrow","MeshEntity","Section","Sieve","entity_fill","mesh","mesh_entity","overlap","section","sieve","stratify","Mesh","add_arrow","add_entity","add_relationship","apply_reordering","borrow","borrow_mut","boundary","boundary_data_receiver","boundary_data_sender","clone","clone_into","compute_properties","count_entities","deref","deref_mut","drop","entities","entities","from","geometry","get_cell_centroid","get_cell_shape","get_cell_vertices","get_cells","get_cells_sharing_face","get_distance_between_cells","get_face_area","get_face_vertices","get_faces","get_faces_of_cell","get_neighboring_vertices","get_vertex_coordinates","hierarchical","init","into","iter_vertices","morton_order_2d","new","par_for_each_entity","rcm_ordering","receive_boundary_data","reorder_by_morton_order","reordering","send_boundary_data","set_boundary_channels","set_vertex_coordinates","sieve","sync_boundary_data","to_owned","try_from","try_into","type_id","vertex_coordinates","Branch","Leaf","LeafIterator","MeshNode","apply_hanging_node_constraints","borrow","borrow","borrow_mut","borrow_mut","coarsen","deref","deref","deref_mut","deref_mut","drop","drop","eq","fmt","from","from","init","init","into","into","into_iter","leaf_iter","next","refine","try_from","try_from","try_into","try_into","type_id","type_id","children","data","cuthill_mckee","Arrow","Cell","Edge","Face","MeshEntity","Vertex","add_entity","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","entity_type","eq","fmt","from","from","from","get_relation","hash","id","init","init","into","into","new","partial_cmp","to","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Delta","Overlap","add_ghost_entity","add_local_entity","apply","borrow","borrow","borrow_mut","borrow_mut","data","deref","deref","deref_mut","deref_mut","drop","drop","from","from","get_data","ghost_entities","ghost_entities","has_data","init","init","into","into","is_ghost","is_local","local_entities","local_entities","merge","merge","new","new","remove_data","set_data","try_from","try_from","try_into","try_into","type_id","type_id","Section","all_data","all_data_mut","borrow","borrow_mut","clear","data","deref","deref_mut","drop","entities","from","init","into","new","parallel_update","restrict","restrict_mut","set_data","try_from","try_into","type_id","update_data","Sieve","add_arrow","adjacency","borrow","borrow_mut","clone","clone_into","closure","cone","deref","deref_mut","drop","fill_missing_entities","fmt","from","init","into","join","meet","new","par_for_each_adjacent","star","stratify","support","to_owned","try_from","try_into","type_id","CellShape","FaceShape","Geometry","GeometryCache","Hexahedron","Prism","Pyramid","Quadrilateral","Tetrahedron","Triangle","area","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cache","cell_centroids","cell_volumes","centroid","clone","clone","clone_into","clone_into","compute_cell_centroid","compute_cell_volume","compute_distance","compute_face_area","compute_face_centroid","compute_hexahedron_centroid","compute_hexahedron_volume","compute_prism_centroid","compute_prism_volume","compute_pyramid_centroid","compute_pyramid_volume","compute_quadrilateral_area","compute_quadrilateral_centroid","compute_tetrahedron_centroid","compute_tetrahedron_volume","compute_total_centroid","compute_total_volume","compute_triangle_area","compute_triangle_centroid","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","fmt","fmt","from","from","from","from","hexahedron","init","init","init","init","into","into","into","into","new","prism","pyramid","quadrilateral","set_vertex","tetrahedron","to_owned","to_owned","triangle","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_all_cell_volumes","vertices","volume","Matrix","Vector","matrix","vector","Matrix","mat_impl","traits","Matrix","Scalar","as_slice","as_slice_mut","frobenius_norm","get","mat_vec","ncols","nrows","trace","Vector","mat_impl","traits","vec_impl","Scalar","Vector","as_slice","axpy","cross","dot","element_wise_add","element_wise_div","element_wise_mul","get","len","max","mean","min","norm","scale","set","sum","variance","ConjugateGradient","KSP","cg","gmres","ksp","preconditioner","ConjugateGradient","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","max_iter","new","preconditioner","set_preconditioner","solve","tol","try_from","try_into","type_id","GMRES","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","max_iter","new","preconditioner","restart","set_preconditioner","solve","tol","try_from","try_into","type_id","KSP","SolverResult","borrow","borrow_mut","converged","deref","deref_mut","drop","fmt","from","init","into","iterations","residual_norm","solve","try_from","try_into","type_id","Jacobi","LU","Preconditioner","apply","jacobi","lu","Jacobi","apply","borrow","borrow_mut","default","deref","deref_mut","drop","from","init","into","try_from","try_into","type_id","LU","apply","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","new","try_from","try_into","type_id","BackwardEuler","ForwardEuler","TimeDependentProblem","TimeStepper","TimeSteppingError","adaptivity","methods","ts","backward_euler","euler","BackwardEuler","adaptive_step","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","set_time_interval","set_time_step","step","try_from","try_into","type_id","ForwardEuler","adaptive_step","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","set_time_interval","set_time_step","step","try_from","try_into","type_id","State","Time","TimeDependentProblem","TimeStepper","TimeSteppingError","adaptive_step","borrow","borrow_mut","compute_rhs","deref","deref_mut","drop","fmt","from","get_matrix","init","initial_state","into","set_time_interval","set_time_step","solve_linear_system","step","time_to_scalar","try_from","try_into","type_id"],"q":[[0,"hydra"],[17,"hydra::boundary"],[21,"hydra::boundary::bc_handler"],[61,"hydra::boundary::bc_handler::BoundaryCondition"],[63,"hydra::boundary::dirichlet"],[80,"hydra::boundary::neumann"],[97,"hydra::boundary::robin"],[114,"hydra::domain"],[125,"hydra::domain::mesh"],[179,"hydra::domain::mesh::hierarchical"],[213,"hydra::domain::mesh::hierarchical::MeshNode"],[215,"hydra::domain::mesh::reordering"],[216,"hydra::domain::mesh_entity"],[258,"hydra::domain::overlap"],[300,"hydra::domain::section"],[323,"hydra::domain::sieve"],[351,"hydra::geometry"],[450,"hydra::linalg"],[454,"hydra::linalg::matrix"],[457,"hydra::linalg::matrix::traits"],[467,"hydra::linalg::vector"],[471,"hydra::linalg::vector::traits"],[490,"hydra::solver"],[496,"hydra::solver::cg"],[514,"hydra::solver::gmres"],[533,"hydra::solver::ksp"],[551,"hydra::solver::preconditioner"],[557,"hydra::solver::preconditioner::jacobi"],[571,"hydra::solver::preconditioner::lu"],[585,"hydra::time_stepping"],[593,"hydra::time_stepping::methods"],[595,"hydra::time_stepping::methods::backward_euler"],[611,"hydra::time_stepping::methods::euler"],[627,"hydra::time_stepping::ts"],[653,"faer::mat::matmut"],[654,"rustc_hash"],[655,"core::option"],[656,"core::result"],[657,"core::any"],[658,"core::marker"],[659,"core::ops::function"],[660,"alloc::string"],[661,"alloc::vec"],[662,"core::iter::traits::iterator"],[663,"crossbeam_channel::channel"],[664,"core::clone"],[665,"core::cmp"],[666,"core::fmt"],[667,"core::convert"],[668,"core::hash"],[669,"alloc::boxed"],[670,"faer::mat::matown"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,10,1,10,11,11,10,11,10,10,10,11,10,11,10,11,10,11,10,11,11,10,11,10,11,11,10,11,10,11,10,11,10,77,77,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,19,19,19,19,19,19,0,19,19,19,19,19,19,19,19,19,0,19,19,0,19,19,19,19,19,19,19,19,19,19,19,19,0,19,19,19,19,19,19,19,19,19,0,19,19,19,19,19,19,19,19,19,19,36,36,0,0,36,43,36,43,36,36,43,36,43,36,43,36,36,36,43,36,43,36,43,36,43,36,43,36,43,36,43,36,43,36,78,78,0,0,3,3,3,0,3,46,46,3,46,3,3,3,46,3,46,3,46,3,3,3,3,46,3,46,46,3,3,46,3,46,3,46,3,46,3,46,3,46,3,46,3,0,0,49,49,50,49,50,49,50,50,49,50,49,50,49,50,49,50,50,49,49,50,49,50,49,50,49,49,49,49,49,50,49,50,50,50,49,50,49,50,49,50,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,0,0,0,25,25,25,54,25,54,56,55,56,25,54,55,56,25,54,55,55,55,56,25,54,25,54,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,56,55,56,25,54,55,56,25,54,55,56,25,54,25,25,54,55,56,25,54,0,55,56,25,54,55,56,25,54,55,0,0,0,55,0,25,54,0,55,56,25,54,55,56,25,54,55,56,25,54,55,55,56,0,0,0,0,0,0,0,0,58,58,58,58,58,58,58,58,58,0,0,0,0,61,0,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,0,0,0,0,0,0,0,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,0,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,0,0,64,64,64,64,64,64,64,64,64,64,64,64,66,64,64,64,0,0,0,63,0,0,0,67,67,67,67,67,67,67,67,67,67,67,67,67,0,68,68,68,68,68,68,68,68,68,68,68,68,68,0,0,0,0,0,0,0,0,0,0,0,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,0,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,72,72,0,0,0,74,71,71,72,71,71,71,71,71,72,71,72,71,74,74,72,74,72,71,71,71],"f":"``````````````````````````````{{{d{b}}{d{f}}{d{h{l{j}}}}{d{h{l{j}}}}{d{{A`{fn}}}}j}Ab}{{{d{Ad}}{d{f}}{d{h{l{j}}}}{d{h{l{j}}}}{d{{A`{fn}}}}j}Ab}{{{d{Af}}{d{h{l{j}}}}{d{h{l{j}}}}{d{{Ah{f}}}}{d{{A`{fn}}}}j}Ab}{{{d{c}}}{{d{e}}}{}{}}0{{{d{hc}}}{{d{he}}}{}{}}0{{{d{Ad}}}Ad}{{{d{c}}{d{he}}}Ab{}{}}{n{{d{c}}}{}}0{n{{d{hc}}}{}}0{nAb}0{cc{}}0{{{d{Af}}{d{f}}}{{Aj{Ad}}}}{{}n}0{ce{}{}}0{{}Af}{{{d{Af}}fAd}Ab}{{{d{c}}}e{}{}}{c{{Al{e}}}{}{}}000{{{d{c}}}An{}}0```{{{d{B`}}{d{f}}{d{h{l{j}}}}{d{h{l{j}}}}{d{{A`{fn}}}}j}Ab}{{{d{B`}}{d{h{l{j}}}}{d{h{l{j}}}}{d{{A`{fn}}}}j}Ab}{{{d{B`}}{d{h{l{j}}}}{d{h{l{j}}}}nj}Ab}{{{d{c}}}{{d{e}}}{}{}}{{{d{hc}}}{{d{he}}}{}{}}{n{{d{c}}}{}}{n{{d{hc}}}{}}{nAb}{cc{}}?>{{}B`}{{{d{B`}}fAd}Ab}<<;`{{{d{Bb}}{d{f}}{d{h{l{j}}}}{d{h{l{j}}}}{d{{A`{fn}}}}j}Ab}{{{d{Bb}}{d{h{l{j}}}}{d{h{l{j}}}}{d{{A`{fn}}}}j}Ab}{{{d{Bb}}{d{h{l{j}}}}nj}Ab}:98765{{}n}{ce{}{}}{{}Bb}{{{d{Bb}}fAd}Ab}{c{{Al{e}}}{}{}}0{{{d{c}}}An{}}`{{{d{Bd}}{d{f}}{d{h{l{j}}}}{d{h{l{j}}}}{d{{A`{fn}}}}j}Ab}{{{d{Bd}}{d{h{l{j}}}}{d{h{l{j}}}}{d{{A`{fn}}}}j}Ab}{{{d{Bd}}{d{h{l{j}}}}{d{h{l{j}}}}njj}Ab}{{{d{c}}}{{d{e}}}{}{}}{{{d{hc}}}{{d{he}}}{}{}}{n{{d{c}}}{}}{n{{d{hc}}}{}}{nAb}{cc{}}>={{}Bd}{{{d{Bd}}fAd}Ab}<<;````````````{{{d{Bf}}ff}Ab}{{{d{Bf}}f}Ab}{{{d{hBf}}ff}Ab}{{{d{hBf}}{d{{Ah{n}}}}}Ab};:```{{{d{Bf}}}Bf}{{{d{c}}{d{he}}}Ab{}{}}{{{d{Bf}}e}{{A`{fc}}}Bh{{Bl{{d{f}}}{{Bj{c}}}}BnBh}}{{{d{Bf}}{d{f}}}n}=<;``:`{{{d{Bf}}{d{f}}}{{C`{j}}}}{{{d{Bf}}{d{f}}}{{Al{CbCd}}}}{{{d{Bf}}{d{f}}}{{Cf{{C`{j}}}}}}{{{d{Bf}}}{{Cf{f}}}}{{{d{Bf}}{d{f}}}{{Ch{f}}}}{{{d{Bf}}{d{f}}{d{f}}}j}{{{d{Bf}}{d{f}}}j}43{{{d{Bf}}{d{f}}}{{Aj{{Ch{f}}}}}}{{{d{Bf}}{d{f}}}{{Cf{f}}}}{{{d{Bf}}n}{{Aj{{C`{j}}}}}}`{{}n}{ce{}{}}{{{d{Bf}}}{{`{{Cl{}{{Cj{{d{n}}}}}}}}}}{{CnCn}D`}{{}Bf}{{{d{Bf}}c}Ab{{Bl{{d{f}}}}BnBh}}{{{d{Bf}}f}{{Cf{f}}}}{{{d{hBf}}}Ab}{{{d{hBf}}{d{h{Ah{{Db{CnCn}}}}}}}Ab}`{{{d{Bf}}}Ab}{{{d{hBf}}{Dd{{A`{f{C`{j}}}}}}{Df{{A`{f{C`{j}}}}}}}Ab}{{{d{hBf}}n{C`{j}}}Ab}`4{{{d{c}}}e{}{}}{c{{Al{e}}}{}{}}0{{{d{c}}}An{}}`````{{{d{{Dh{c}}}}{d{h{Ah{j}}}}{d{h{C`{{C`{j}}}}}}}AbDj}{{{d{c}}}{{d{e}}}{}{}}0{{{d{hc}}}{{d{he}}}{}{}}0{{{d{h{Dh{c}}}}}AbDj}{n{{d{c}}}{}}0{n{{d{hc}}}{}}0{nAb}0{{{d{{Dh{c}}}}{d{{Dh{c}}}}}DlDn}{{{d{{Dh{c}}}}{d{hE`}}}EbEd}{cc{}}0{{}n}0{ce{}{}}00{{{d{{Dh{c}}}}}{{Ef{c}}}Dj}{{{d{h{Ef{c}}}}}{{Aj{e}}}{}{}}{{{d{h{Dh{c}}}}e}AbDj{{Bl{{d{c}}}{{Bj{{C`{c}}}}}}}}{c{{Al{e}}}{}{}}000{{{d{c}}}An{}}0``{{{d{{Ah{f}}}}{d{{A`{f{Cf{f}}}}}}}{{Cf{f}}}}``````{cf{{Eh{f}}}}{{{d{c}}}{{d{e}}}{}{}}0{{{d{hc}}}{{d{he}}}{}{}}0{{{d{f}}}f}{{{d{c}}{d{he}}}Ab{}{}}{n{{d{c}}}{}}0{n{{d{hc}}}{}}0{nAb}0{{{d{f}}}{{d{Ej}}}}{{{d{f}}{d{f}}}Dl}{{{d{f}}{d{hE`}}}Eb}{cc{}}0`{{{d{El}}}{{Db{{d{f}}{d{f}}}}}}{{{d{f}}{d{hc}}}AbEn}{{{d{f}}}n}{{}n}0{ce{}{}}0{{ff}El}{{{d{f}}{d{f}}}{{Aj{F`}}}}`{{{d{c}}}e{}{}}{c{{Al{e}}}{}{}}000{{{d{c}}}An{}}0``{{{d{Fb}}f}Ab}0{{{d{{Fd{c}}}}e}Ab{}{{Ff{{d{f}}{d{c}}}}}}{{{d{c}}}{{d{e}}}{}{}}0{{{d{hc}}}{{d{he}}}{}{}}0`{n{{d{c}}}{}}0{n{{d{hc}}}{}}0{nAb}0{cc{}}0{{{d{{Fd{c}}}}{d{f}}}{{Aj{c}}}Dj}{{{d{Fb}}}{{Ch{f}}}}`{{{d{{Fd{c}}}}{d{f}}}Dl{}}{{}n}0{ce{}{}}0{{{d{Fb}}{d{f}}}Dl}04`{{{d{Fb}}{d{Fb}}}Ab}{{{d{{Fd{c}}}}{d{{Fd{c}}}}}AbDj}{{}Fb}{{}{{Fd{c}}}{}}{{{d{{Fd{c}}}}{d{f}}}{{Aj{c}}}{}}{{{d{{Fd{c}}}}fc}Ab{}}{c{{Al{e}}}{}{}}000{{{d{c}}}An{}}0`{{{d{{Fh{c}}}}}{{Cf{c}}}Dj}0{{{d{c}}}{{d{e}}}{}{}}{{{d{hc}}}{{d{he}}}{}{}}{{{d{{Fh{c}}}}}Ab{}}`{n{{d{c}}}{}}{n{{d{hc}}}{}}{nAb}{{{d{{Fh{c}}}}}{{Cf{f}}}{}}{cc{}}{{}n}{ce{}{}}{{}{{Fh{c}}}{}}{{{d{{Fh{c}}}}e}Ab{BhBn}{{Bl{{d{hc}}}}BnBh}}{{{d{{Fh{c}}}}{d{f}}}{{Aj{c}}}Dj}0{{{d{{Fh{c}}}}fc}Ab{}}{c{{Al{e}}}{}{}}0{{{d{c}}}An{}}{{{d{{Fh{c}}}}{d{f}}c}Ab{}}`{{{d{Fj}}ff}Ab}`{{{d{c}}}{{d{e}}}{}{}}{{{d{hc}}}{{d{he}}}{}{}}{{{d{Fj}}}Fj}{{{d{c}}{d{he}}}Ab{}{}}{{{d{Fj}}{d{f}}}{{Ch{f}}}}{{{d{Fj}}{d{f}}}{{Aj{{Ch{f}}}}}}{n{{d{c}}}{}}{n{{d{hc}}}{}}{nAb}{{{d{Fj}}}Ab}{{{d{Fj}}{d{hE`}}}Eb}{cc{}}{{}n}{ce{}{}}{{{d{Fj}}{d{f}}{d{f}}}{{Ch{f}}}}0{{}Fj}{{{d{Fj}}c}Ab{{Bl{{Db{{d{f}}{d{{Ch{f}}}}}}}}BnBh}}<{{{d{Fj}}}{{A`{n{Cf{f}}}}}}={{{d{c}}}e{}{}}{c{{Al{e}}}{}{}}0{{{d{c}}}An{}}```````````{{{d{c}}}{{d{e}}}{}{}}000{{{d{hc}}}{{d{he}}}{}{}}000````{{{d{Cb}}}Cb}{{{d{Fl}}}Fl}{{{d{c}}{d{he}}}Ab{}{}}0{{{d{hFn}}{d{Bf}}{d{f}}}{{C`{j}}}}{{{d{hFn}}{d{Bf}}{d{f}}}j}{{{d{{C`{j}}}}{d{{C`{j}}}}}j}{{{d{hFn}}nFl{d{{Cf{{C`{j}}}}}}}j}{{{d{Fn}}Fl{d{{Cf{{C`{j}}}}}}}{{C`{j}}}}{{{d{Fn}}{d{{Cf{{C`{j}}}}}}}{{C`{j}}}}{{{d{Fn}}{d{{Cf{{C`{j}}}}}}}j}10100110{{{d{Fn}}}{{C`{j}}}}{{{d{Fn}}}j}23{{}G`}{n{{d{c}}}{}}000{n{{d{hc}}}{}}000{nAb}000{{{d{Cb}}{d{Cb}}}Dl}{{{d{Cb}}{d{hE`}}}Eb}{{{d{Fl}}{d{hE`}}}Eb}{cc{}}000`{{}n}000{ce{}{}}000{{}Fn}```{{{d{hFn}}n{C`{j}}}Ab}`{{{d{c}}}e{}{}}0`{c{{Al{e}}}{}{}}0000000{{{d{c}}}An{}}000{{{d{hFn}}{d{Bf}}}Ab}```````````{{{d{{Gd{}{{Gb{c}}}}}}}{{Gf{{Ah{c}}}}}{GhBhBn}}{{{d{h{Gd{}{{Gb{c}}}}}}}{{Gf{{Ah{c}}}}}{GhBhBn}}{{{d{{Gd{}{{Gb{c}}}}}}}c{GhBhBn}}{{{d{{Gd{}{{Gb{c}}}}}}nn}c{GhBhBn}}{{{d{{Gd{}{{Gb{c}}}}}}{d{Gj}}{d{hGj}}}Ab{GhBhBn}}{{{d{{Gd{}{{Gb{c}}}}}}}n{GhBhBn}}03``````{{{d{{Gj{}{{Gb{c}}}}}}}{{d{{Ah{j}}}}}{GhBhBn}}{{{d{h{Gj{}{{Gb{c}}}}}}c{d{Gj}}}Ab{GhBhBn}}{{{d{h{Gj{}{{Gb{c}}}}}}{d{Gj}}}{{Al{Ab{d{Ej}}}}}{GhBhBn}}{{{d{{Gj{}{{Gb{c}}}}}}{d{Gj}}}c{GhBhBn}}{{{d{h{Gj{}{{Gb{c}}}}}}{d{Gj}}}Ab{GhBhBn}}00{{{d{{Gj{}{{Gb{c}}}}}}n}c{GhBhBn}}{{{d{{Gj{}{{Gb{c}}}}}}}n{GhBhBn}}{{{d{{Gj{}{{Gb{c}}}}}}}c{GhBhBn}}000{{{d{h{Gj{}{{Gb{c}}}}}}c}Ab{GhBhBn}}{{{d{h{Gj{}{{Gb{c}}}}}}nc}Ab{GhBhBn}}22```````{{{d{c}}}{{d{e}}}{}{}}{{{d{hc}}}{{d{he}}}{}{}}{n{{d{c}}}{}}{n{{d{hc}}}{}}{nAb}{cc{}}{{}n}{ce{}{}}`{{nj}Gl}`{{{d{hGl}}{Gf{Gn}}}Ab}{{{d{hGl}}{d{Gd}}{d{Gj}}{d{hGj}}}H`}`{c{{Al{e}}}{}{}}0{{{d{c}}}An{}}`<;:98765`{{njn}Hb}``{{{d{hHb}}{Gf{Gn}}}Ab}{{{d{hHb}}{d{Gd}}{d{Gj}}{d{hGj}}}H`}`443``?>`=<;{{{d{H`}}{d{hE`}}}Eb};:9``{{{d{hHd}}{d{Gd}}{d{Gj}}{d{hGj}}}H`}665```{{{d{Gn}}{d{Gd}}{d{Gj}}{d{hGj}}}Ab}```{{{d{Hf}}{d{Gd}}{d{Gj}}{d{hGj}}}Ab}{{{d{c}}}{{d{e}}}{}{}}{{{d{hc}}}{{d{he}}}{}{}}{{}Hf}{n{{d{c}}}{}}{n{{d{hc}}}{}}{nAb}{cc{}}{{}n}{ce{}{}}{c{{Al{e}}}{}{}}0{{{d{c}}}An{}}`{{{d{Hh}}{d{Gd}}{d{Gj}}{d{hGj}}}Ab};:876543{{{d{{Hj{j}}}}}Hh}332```````````{{{d{hHl}}{d{c}}{d{h}}}{{Al{AbHn}}}I`}=<:98765{{{d{hHl}}}Ab}01554`{{{d{hIb}}{d{c}}{d{h}}}{{Al{AbHn}}}I`}?><;:987{{{d{hIb}}}Ab}01776`````{{{d{hId}}{d{c}}{d{h}}}{{Al{AbHn}}}I`}{{{d{c}}}{{d{e}}}{}{}}{{{d{hc}}}{{d{he}}}{}{}}{{{d{{I`{}{{If{c}}{Ih{e}}}}}}e{d{c}}{d{hc}}}{{Al{AbHn}}}Gj{}}{n{{d{c}}}{}}{n{{d{hc}}}{}}{nAb}{{{d{Hn}}{d{hE`}}}Eb}{cc{}}{{{d{{I`{}{{If{c}}{Ih{e}}}}}}}{{Gf{Gd}}}Gj{}}{{}n}{{{d{{I`{}{{If{c}}{Ih{e}}}}}}}cGj{}}{ce{}{}}{{{d{hId}}}Ab}0{{{d{{I`{}{{If{c}}{Ih{e}}}}}}{d{hGd}}{d{hc}}{d{c}}}{{Al{AbHn}}}Gj{}}>{{{d{{I`{}{{If{c}}{Ih{e}}}}}}e}{}Gj{}}{c{{Al{e}}}{}{}}0{{{d{c}}}An{}}","D":"ANd","p":[[10,"BoundaryConditionApply",21],[1,"reference"],[6,"MeshEntity",216],[0,"mut"],[1,"f64"],[5,"MatMut",653],[1,"usize"],[8,"FxHashMap",654],[1,"unit"],[6,"BoundaryCondition",21],[5,"BoundaryConditionHandler",21],[1,"slice"],[6,"Option",655],[6,"Result",656],[5,"TypeId",657],[5,"DirichletBC",63],[5,"NeumannBC",80],[5,"RobinBC",97],[5,"Mesh",125],[10,"Send",658],[17,"Output"],[10,"Fn",659],[10,"Sync",658],[1,"array"],[6,"CellShape",351],[5,"String",660],[5,"Vec",661],[8,"FxHashSet",654],[17,"Item"],[10,"Iterator",662],[1,"u32"],[1,"u64"],[1,"tuple"],[5,"Sender",663],[5,"Receiver",663],[6,"MeshNode",179],[10,"Clone",664],[1,"bool"],[10,"PartialEq",665],[5,"Formatter",666],[8,"Result",666],[10,"Debug",666],[5,"LeafIterator",179],[10,"Into",667],[1,"str"],[5,"Arrow",216],[10,"Hasher",668],[6,"Ordering",665],[5,"Overlap",258],[5,"Delta",258],[10,"FnMut",659],[5,"Section",300],[5,"Sieve",323],[6,"FaceShape",351],[5,"Geometry",351],[5,"GeometryCache",351],[17,"Scalar"],[10,"Matrix",457],[5,"Box",669],[10,"Copy",658],[10,"Vector",471],[5,"ConjugateGradient",496],[10,"Preconditioner",551],[5,"SolverResult",533],[5,"GMRES",514],[10,"KSP",533],[5,"Jacobi",557],[5,"LU",571],[5,"Mat",670],[5,"BackwardEuler",595],[5,"TimeSteppingError",627],[10,"TimeDependentProblem",627],[5,"ForwardEuler",611],[10,"TimeStepper",627],[17,"State"],[17,"Time"],[15,"Robin",61],[15,"Branch",213]],"r":[[0,216],[1,351],[2,351],[3,351],[4,457],[5,125],[6,216],[7,300],[8,323],[9,471],[114,216],[115,216],[116,300],[117,323],[450,457],[451,471],[454,457],[467,471],[490,496],[491,533],[551,557],[552,571],[585,595],[586,611],[587,627],[588,627],[589,627]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAJsBTwAAAAoADgAHABgAAAAaAAQAIgALADEAAQA3AAgARAAEAEoAAABOAAIAVQAEAFsAAABfAAIAZgAEAGwAAABwAAIAdQAIAIMAAgCIAAEAjAADAJIAAACfAAEAqQAAAK8AAwC5AAMAvgAHAMgAAQDMAAAA0AAHANoAAgDeAAAA4AALAO0AAQDxAAAA8wAAAPUAAQD6AAgACAEDAA0BBQAZAQEAJwEFADABAQA0AQIAOQEAAEABAgBHAQMATQECAFEBAABTAQAAXAEDAGQBFgCOAQ8AogEEAKwBAgCwAQ8AwQEKAM0BAADPAQMA1AEDAOsBCwD4AQAA+gEOAAoCAAAMAhIAIAIAACICEwA3AgAAOQIJAEQCAABGAgoAUgIIAFwCAABeAgwAbAIAAG4CBwB6AgEAfQIDAIMCAACLAgIA"}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
