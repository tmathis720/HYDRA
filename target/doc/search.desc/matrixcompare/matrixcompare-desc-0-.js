searchState.loadedDescShard("matrixcompare", 0, "Tools for comparing matrices for debugging purposes.\nDefines how the elements of a matrix may be accessed.\nA pair of (row, column) coordinates in a matrix.\nAccess to a dense matrix.\nA coordinate in the left or right matrix being compared.\nMain interface for access to the elements of a matrix.\nThe error type associated with matrix comparison.\nAccess to a sparse matrix.\nExpose dense or sparse access to the matrix.\nCompare matrices for exact or approximate equality.\nCompare scalars for exact or approximate equality.\nComparators used for element-wise comparison of matrix …\nComparison of two matrices.\nComparison of two scalars.\nRetrieve the triplets that identify the coefficients of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNumber of non-zero elements in the matrix.\nTools for ULP-based comparison of floating point numbers.\nThe <code>abs</code> comparator used with assert_matrix_eq!.\nTrait that describes elementwise comparators for …\nThe <code>exact</code> comparator used with assert_matrix_eq!.\nThe <code>float</code> comparator used with assert_matrix_eq!.\nThe <code>ulp</code> comparator used with assert_matrix_eq!.\nCompares two elements.\nA description of the comparator.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe maximum absolute difference tolerated (inclusive).\nThe maximum difference in ULP units tolerated (inclusive).\nThe difference in ULP between two floating point numbers.\nSignifies an exact match between two floating point …\nThe two floating point numbers have different signs, and …\nOne or both of the two floating point numbers is a NaN, in …\nFloating point types for which two instances can be …\nRepresents the result of an ULP-based comparison between …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the difference between two floating point numbers, …")