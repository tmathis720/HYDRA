searchState.loadedDescShard("gemm_common", 0, "Returns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nImaginary portion of the complex number\nImaginary portion of the complex number\nReal portion of the complex number\nReal portion of the complex number\nMarker trait for “plain old data”.\nSafe transmute function.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the required CPU features for this type …\nReturns a SIMD token type without checking if the required …\nTakes a proof of the existence of this SIMD token (<code>self</code>), …\nReturns a SIMD token type if the required CPU features for …\nVectorizes the given function as if the CPU features for …")